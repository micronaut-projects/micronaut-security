tasks.withType(Test) {
    systemProperty "testcontainers", System.getProperty('testcontainers') ?: true
    afterTest { desc, result ->
        //logger.quiet " -- Executed test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
    testLogging {
        events "passed", "skipped", "failed"//, "standardOut"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events "passed", "skipped", "failed"//, "started", "standardOut", "standardError"
            exceptionFormat "full"
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                logger.quiet "\n${'-' * repeatLength}\n${startItem}${output}${endItem}\n${'-' * repeatLength}"
            }
        }
    }
}